CCS PCM C Compiler, Version 5.025, 5967               17-Nov-17 08:42

               Filename:   C:\Users\Dung Phan\Documents\Serial\main.lst

               ROM used:   117 words (1%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           14 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   05A
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.5
001A:  GOTO   01D
001B:  BTFSC  0C.5
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=20000000) 
....................  
.................... #use rs232(baud=9600,Parity=N,xmit=PIN_C6,rcv=PIN_C7) 
....................  
.................... #INT_RDA 
.................... void ngatDongCo() 
.................... { 
....................    char a; 
....................    a = getc(); 
0031:  BTFSS  0C.5
0032:  GOTO   031
0033:  MOVF   1A,W
0034:  MOVWF  28
....................    switch(a) 
0035:  MOVF   28,W
0036:  XORLW  6C
0037:  BTFSC  03.2
0038:  GOTO   03D
0039:  XORLW  1E
003A:  BTFSC  03.2
003B:  GOTO   04A
003C:  GOTO   056
....................    { 
....................       case 'l': 
....................       { 
....................          output_bit(PIN_C1,1); 
003D:  BSF    07.1
003E:  BCF    27.1
003F:  MOVF   27,W
0040:  BSF    03.5
0041:  MOVWF  07
....................          output_bit(PIN_C4,1); 
0042:  BCF    03.5
0043:  BSF    07.4
0044:  BCF    27.4
0045:  MOVF   27,W
0046:  BSF    03.5
0047:  MOVWF  07
....................          break; 
0048:  BCF    03.5
0049:  GOTO   056
....................       } 
....................       case 'r': 
....................       { 
....................          output_bit(PIN_C1,1); 
004A:  BSF    07.1
004B:  BCF    27.1
004C:  MOVF   27,W
004D:  BSF    03.5
004E:  MOVWF  07
....................          output_bit(PIN_C4,0); 
004F:  BCF    03.5
0050:  BCF    07.4
0051:  BCF    27.4
0052:  MOVF   27,W
0053:  BSF    03.5
0054:  MOVWF  07
....................          break; 
0055:  BCF    03.5
....................       } 
....................    } 
0056:  BCF    0C.5
0057:  BCF    0A.3
0058:  BCF    0A.4
0059:  GOTO   01D
.................... } 
....................  
....................  
....................  
.................... void main() 
005A:  MOVF   03,W
005B:  ANDLW  1F
005C:  MOVWF  03
005D:  MOVLW  81
005E:  BSF    03.5
005F:  MOVWF  19
0060:  MOVLW  A6
0061:  MOVWF  18
0062:  MOVLW  90
0063:  BCF    03.5
0064:  MOVWF  18
0065:  MOVLW  FF
0066:  MOVWF  27
0067:  BSF    03.5
0068:  BSF    1F.0
0069:  BSF    1F.1
006A:  BSF    1F.2
006B:  BCF    1F.3
006C:  MOVLW  07
006D:  MOVWF  1C
006E:  BCF    03.7
.................... { 
....................    enable_interrupts(int_rda); 
006F:  BSF    0C.5
....................    enable_interrupts(GLOBAL); 
0070:  MOVLW  C0
0071:  BCF    03.5
0072:  IORWF  0B,F
....................    while(TRUE) 
....................    { 
0073:  GOTO   073
....................      
....................    } 
.................... } 
0074:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
